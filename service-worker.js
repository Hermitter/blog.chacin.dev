!function(){"use strict";const t=["client/index.a3e398dd.js","client/client.c2d13623.js","client/index.f5362652.js","client/Icon.b4e05bae.js","client/about.1c981a73.js","client/index.es.d57aba40.js","client/index.93757b2e.js","client/[slug].d3ae4ea4.js"].concat(["service-worker-index.html","clippy.svg","default-poster.png","favicon.png","global.css","great-success.png","headshot.jpg","logo-192.png","logo-512.png","manifest.json","posts/cross-compiling-rust-for-the-raspberry-pi/demo.png","posts/cross-compiling-rust-for-the-raspberry-pi/frontCover.png","posts/cross-compiling-rust-for-the-raspberry-pi/post.md","posts/cross-compiling-rust-for-the-raspberry-pi/poster.png","posts/getting-started-with-webassembly-and-rust/frontCover.jpg","posts/getting-started-with-webassembly-and-rust/images/enum_and_struct_example_log.png","posts/getting-started-with-webassembly-and-rust/images/manual_bindings_example.gif","posts/getting-started-with-webassembly-and-rust/images/project_file_structure.png","posts/getting-started-with-webassembly-and-rust/images/wasm_hello_world.png","posts/getting-started-with-webassembly-and-rust/post.md","posts/getting-started-with-webassembly-and-rust/poster.png","posts/lorem-ipsum/frontCover.png","posts/lorem-ipsum/post.md","posts/lorem-ipsum/poster.png"]),e=new Set(t);self.addEventListener("install",e=>{e.waitUntil(caches.open("cache1595668868779").then(e=>e.addAll(t)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",t=>{t.waitUntil(caches.keys().then(async t=>{for(const e of t)"cache1595668868779"!==e&&await caches.delete(e);self.clients.claim()}))}),self.addEventListener("fetch",t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const s=new URL(t.request.url);s.protocol.startsWith("http")&&(s.hostname===self.location.hostname&&s.port!==self.location.port||(s.host===self.location.host&&e.has(s.pathname)?t.respondWith(caches.match(t.request)):"only-if-cached"!==t.request.cache&&t.respondWith(caches.open("offline1595668868779").then(async e=>{try{const s=await fetch(t.request);return e.put(t.request,s.clone()),s}catch(s){const n=await e.match(t.request);if(n)return n;throw s}}))))})}();
